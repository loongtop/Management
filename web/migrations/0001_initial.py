# Generated by Django 4.0.4 on 2022-05-04 17:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rbac', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveIntegerField(verbose_name='Term')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('graduate_date', models.DateField(blank=True, null=True, verbose_name='Finish Date')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='Memo')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='COURSE')),
            ],
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_num', models.IntegerField(verbose_name='Day Num')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
                ('class_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.classlist', verbose_name='ClassList')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('email', models.CharField(help_text='QQ号/微信/手机号', max_length=64, unique=True, verbose_name='')),
                ('phone', models.CharField(help_text='QQ号/微信/手机号', max_length=64, unique=True, verbose_name='')),
                ('status', models.IntegerField(choices=[(1, 'Registered'), (2, 'Not registered')], default=2, verbose_name='状态')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女')], verbose_name='性别')),
                ('source', models.SmallIntegerField(choices=[(1, 'Friends'), (2, 'Official Web'), (3, 'Advisement'), (4, 'Others')], default=1, verbose_name='Source')),
                ('course', models.ManyToManyField(to='web.course', verbose_name='Course')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('password', models.CharField(max_length=64, verbose_name='password')),
                ('email', models.CharField(max_length=64, verbose_name='email')),
                ('nickname', models.CharField(max_length=32, verbose_name='Name')),
                ('phone', models.CharField(max_length=32, verbose_name='Phone')),
                ('gender', models.SmallIntegerField(choices=[(1, 'male'), (2, 'female')], default=1, verbose_name='Gender')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='web.department', verbose_name='department')),
                ('role', models.ManyToManyField(blank=True, max_length=32, to='rbac.role', verbose_name='Role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='Campus')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=32, verbose_name='Name')),
                ('phone', models.CharField(max_length=32, verbose_name='Phone')),
                ('emergency_contract', models.CharField(max_length=32, verbose_name='Emergency contact number')),
                ('gender', models.SmallIntegerField(choices=[(1, 'male'), (2, 'female')], default=1, verbose_name='Gender')),
                ('score', models.IntegerField(default=100, verbose_name='Point')),
                ('class_list', models.ManyToManyField(blank=True, to='web.classlist', verbose_name='Registered class')),
            ],
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.CharField(choices=[('normal', 'Normal'), ('vacate', 'On leave'), ('late', 'Be late'), ('absence', 'Absence from work'), ('leave_early', 'Leave early')], default='checked', max_length=64, verbose_name='Record of class')),
                ('course_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.courserecord', verbose_name='Day of the course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.student', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='PointsRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Reason')),
                ('score', models.IntegerField(help_text='Disciplinary deduction points, good performance bonus points', verbose_name='Score')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.student', verbose_name='Student')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee', verbose_name='Executor')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_type', models.IntegerField(choices=[(1, 'registery fee'), (2, 'tuition fee'), (3, 'drop out'), (4, 'others')], default=1, verbose_name='Type')),
                ('paid_fee', models.IntegerField(default=0, verbose_name='Amount')),
                ('apply_date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('confirm_status', models.IntegerField(choices=[(1, 'Applying'), (2, 'Confirmed'), (3, 'Rejected')], default=1, verbose_name='Status')),
                ('confirm_date', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='Remark')),
                ('class_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.classlist', verbose_name='Class')),
                ('confirm_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confirms', to='web.employee', verbose_name='Approver')),
                ('consultant', models.ForeignKey(help_text='This belongs to who signed the contract', on_delete=django.db.models.deletion.CASCADE, to='web.employee', verbose_name='Consultant')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='Customer')),
            ],
        ),
        migrations.AddField(
            model_name='courserecord',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee', verbose_name='Teacher'),
        ),
        migrations.CreateModel(
            name='ConsultRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Content')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Data')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee', verbose_name='Recorder')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer', verbose_name='Customer')),
            ],
        ),
        migrations.AddField(
            model_name='classlist',
            name='class_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='classes', to='web.employee', verbose_name='Class Teacher'),
        ),
        migrations.AddField(
            model_name='classlist',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='web.course', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='classlist',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='web.school', verbose_name='School'),
        ),
        migrations.AddField(
            model_name='classlist',
            name='tech_teachers',
            field=models.ManyToManyField(blank=True, related_name='teach_classes', to='web.employee', verbose_name='Teacher'),
        ),
    ]
